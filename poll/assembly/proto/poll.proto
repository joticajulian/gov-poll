syntax = "proto3";

package poll;

import "koinos/options.proto";

enum vote {
   undef = 0;
   yes = 1;
   no = 2;
}

message vote_args {
   uint32 poll_id = 1;
   bytes voter = 2 [(koinos.btype) = ADDRESS];
   vote vote = 3;
}

message vote_path_args {
   uint32 poll_id = 1;
   bytes voter = 2 [(koinos.btype) = ADDRESS];
}

message poll_id {
   uint32 poll_id = 1;
}

message poll_tier {
   uint32 poll_id = 1;
   uint32 tier_id = 2;
}

message vhp_vote {
   bytes voter = 1 [(koinos.btype) = ADDRESS];
   vote vote = 2;
   uint64 vhp = 3 [jstype = JS_STRING];
}

message vhp_votes {
   repeated vhp_vote vhp_votes = 1;
}

message uint64 {
   uint64 value = 1 [jstype = JS_STRING];
}

message poll_params {
   string title = 1;
   string summary = 2;
   string url = 3;
   bytes creator = 4 [(koinos.btype) = ADDRESS];
   uint64 start_date = 5 [jstype = JS_STRING];
   uint64 end_date = 6 [jstype = JS_STRING];
   /**
    * Tiers
    * users are categorized in groups depending
    * on the VHP. Max 5 tiers. Example:
    *
    *   [
    *     "10000000000000",
    *     "1000000000000",
    *     "0"
    *   ]
    *
    *   3 tiers:
    *   - 0: more than 100k VHP
    *   - 1: between 10k and 100k VHP
    *   - 2: lower than 10k VHP
    */
   repeated poll.uint64 tiers = 7;
}

message poll_data {
   uint32 id = 1;
   poll_params params = 2;
   uint64 yes_vhp_votes = 3 [jstype = JS_STRING];
   uint64 total_vhp_votes = 4 [jstype = JS_STRING];
   uint64 total_vhp_supply = 5 [jstype = JS_STRING];
   uint64 last_update = 6 [jstype = JS_STRING];
}

message update_votes_event {
   uint32 poll_id = 1;
   uint32 tier_id = 2;
   uint32 votes_updated = 3;
   uint64 yes_vhp_votes = 4 [jstype = JS_STRING];
   uint64 total_vhp_votes = 5 [jstype = JS_STRING];
   uint64 total_vhp_supply = 6 [jstype = JS_STRING];
}

enum direction {
   ascending = 0;
   descending = 1;
}

message poll_list_args {
   uint32 start = 1;
   uint32 limit = 2;
   direction direction = 3;
}

message polls {
   repeated poll_data polls = 1;
}

message poll_tier_list_args {
   uint32 poll_id = 1;
   uint32 tier_id = 2;
   bytes start = 3 [(koinos.btype) = ADDRESS];
   uint32 limit = 4;
   direction direction = 5;
}
